name: "gaussiandreamer-sd"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0
 
data_type: "single-image-datamodule"
data:
  # load_type: ${system.load_type}
  image_path: ./load/images/hamburger_rgba.png
  height: [128, 256, 512]
  width: [128, 256, 512]
  resolution_milestones: [200, 300]
  default_elevation_deg: 5.0
  default_azimuth_deg: 0.0
  default_camera_distance: 3.8
  default_fovy_deg: 20.0
  random_camera: # threestudio/data/uncond.py -> RandomCameraDataModuleConfig
    height: [64, 128, 256]
    width: [64, 128, 256]
    batch_size: [12, 4, 2]
    resolution_milestones: [200, 300]
    eval_height: 512
    eval_width: 512
    eval_batch_size: 1
    elevation_range: [-10, 80]
    azimuth_range: [-180, 180]
    camera_distance_range: [3.8, 3.8]
    fovy_range: [20.0, 20.0] # Zero123 has fixed fovy
    progressive_until: 0
    camera_perturb: 0.0
    center_perturb: 0.0
    up_perturb: 0.0
    light_position_perturb: 1.0
    light_distance_range: [7.5, 10.0]
    eval_elevation_deg: ${data.default_elevation_deg}
    eval_camera_distance: ${data.default_camera_distance}
    eval_fovy_deg: ${data.default_fovy_deg}
    light_sample_strategy: "dreamfusion"
    batch_uniform_azimuth: False
    n_val_views: 30
    n_test_views: 120

system_type: "gaussiandreamer-system"
system:
# adding-------------------------------------------------------------------------  
  geometry_type: "gaussian-splatting"
  geometry:
    position_lr: [0, 0.001, 0.00002, 1000]
    scale_lr: [0, 0.01, 0.001, 1000]
    feature_lr: 0.01
    opacity_lr: 0.05
    rotation_lr: 0.001
    densification_interval: 100
    prune_interval: 100
    opacity_reset_interval: 100000
    densify_from_iter: 0
    densify_until_iter: ${trainer.max_steps}
    prune_from_iter: 0
    prune_until_iter: ${trainer.max_steps}
    densify_grad_threshold: 0.01
    min_opac_prune: 0.005
    split_thresh: 0.02
    radii2d_thresh: 1000

    sphere: False

    init_num_pts: 4096
    pc_init_radius: 0.5
    opacity_init: 0.05
    max_num: 500000

  exporter_type: "gaussian-mesh-exporter"

  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 100000
    textureless_prob: 0.05
    albedo_activation: sigmoid

  renderer_type: "diff-gaussian-rasterizer-advanced"
  renderer:
    debug: false
    invert_bg_prob: 1.0

  guidance_type: "stable-zero123-guidance"
  guidance:
    pretrained_model_name_or_path: "./load/zero123/stable_zero123.ckpt"
    pretrained_config: "./load/zero123/sd-objaverse-finetune-c_concat-256.yaml"
    cond_image_path: ${data.image_path}
    cond_elevation_deg: ${data.default_elevation_deg}
    cond_azimuth_deg: ${data.default_azimuth_deg}
    cond_camera_distance: ${data.default_camera_distance}
    guidance_scale: 3.0
    min_step_percent: [50, 0.7, 0.3, 200]  # (start_iter, start_val, end_val, end_iter)
    max_step_percent: [50, 0.98, 0.8, 200]

# adding-------------------------------------------------------------------------      
  background_type: "solid-color-background" # unused
  load_type: 0 # 0: load from shape, 1: load from smpl
  load_path: "./load/shapes/stand.obj" # only used when load_type == 1
  radius: ${data.default_camera_distance}
  sh_degree: 0
  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions, unfocused"

  # guidance_type: "stable-diffusion-guidance"
  # guidance:
  #   pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
  #   guidance_scale: 100.
  #   weighting_strategy: sds
  #   min_step_percent: 0.02
  #   max_step_percent: 0.98
  #   grad_clip: [0,1.5,2.0,1000]

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: None

  loss:
    lambda_sds: 1.
    lambda_sparsity: 1.
    lambda_opaque: 0.0
    # adding-------------------------------------------------------------------------
    lambda_normal_smooth: 8.0
    lambda_3d_normal_smooth: 8.0
  optimizer:
    name: Adam
    args:
      lr: 0.001
      betas: [0.9, 0.99]
      eps: 1.e-15

trainer:
  max_steps: 1200
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 100
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
